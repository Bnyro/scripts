#!/bin/bash

MUSICTXTDIR=~/Documents/Linux/music

has() {
	(command -v "$1" &>/dev/null)
}

chext() { # old extension, new extension
	old=$1
	new=$2
	echo "# Changing extensions from $old to $new ..."
	find . -name "*.$old" | while read i; do
		mv "$i" "${i%.$old}.$new"
	done
}

playlist() { # playlist files directory
  for playlist in "$@"; do
    filename=${playlist##*/}
    name=${filename/.txt//}
		echo "# Downloading ${name} ..."
		yt-dlp -q -f 'ba' -x --audio-format opus -o "${name}/%(title)s.%(ext)s" -a ${playlist}
	done
	chext opus ogg
	echo "# Downloaded playlists succesfully"
}

music() { # song or playlist url
	echo "# Downloading..."
	yt-dlp -q -f 'ba' -x --audio-format opus -o '%(title)s.%(ext)s' $1
	chext opus ogg
}

append () { # filename (not extension), urls
	[ -f "${MUSICTXTDIR}/$1.txt" ] || exit 1
	! [ -d ~/Music/$1 ] && mkdir cd ~/Music/$1
	cd ~/Music/$1
	for URL in "${@: 2}"; do
		grep -rnw $MUSICTXTDIR -e $URL && echo "URL already used" ||
		(
			echo "$URL" >> "${MUSICTXTDIR}/$1.txt"
			music "$URL"
		)
	done
}

update() {
	echo "# Updating System ..."
	has pacman && sudo -S pacman -Syu --noconfirm
	has paru && paru -Syu --noconfirm
	has nala && sudo nala update && sudo nala upgrade
	echo "# Removing Unneeded Packages ..."
	has pacman && sudo pacman -Rns --noconfirm $(pacman -Qtdq)
	has nala && sudo nala autoremove
	echo "# Cleaning App Cache ..."
	has pacman && sudo pacman -Scc --noconfirm
	has nala && sudo nala clean
	echo "# Cleaning Cache ..."
	sudo rm -r ~/.cache /var/cache/* /var/tmp/*
	echo "# Done."
}

gitpush() { # commit message
	branch=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)
  git add .
  git commit -am "$1"
  git push origin "$branch"
}

minify() { # file path
	if test $# -lt 1
	then
		echo Usage $0 CSS-or-JS-file
		exit 1
	fi

	outfile=`echo $1 | sed -e "s|-raw.\(.*\)$|.\1|"`
	if test "$1" = "$outfile"
	then outfile=/dev/stdout
	else echo Minimising $1 and outputting to $outfile
	fi

	cat $1 | sed -e "s|/\*\(\\\\\)\?\*/|/~\1~/|g" -e "s|/\*[^*]*\*\+\([^/][^*]*\*\+\)*/||g" -e "s|\([^:/]\)//.*$|\1|" -e "s|^//.*$||" | tr '\n' ' ' | sed -e "s|/\*[^*]*\*\+\([^/][^*]*\*\+\)*/||g" -e "s|/\~\(\\\\\)\?\~/|/*\1*/|g" -e "s|\s\+| |g" -e "s| \([{;:,]\)|\1|g" -e "s|\([{;:,]\) |\1|g" > $outfile
}

selfinstall() {
	sudo cp bnyro /usr/local/bin
	sudo chmod +x /usr/local/bin/bnyro
}

case ${1} in
update) update ;;
music) music $2 ;;
append) append $2 "${@: 3}" ;;
playlist) playlist "${@: 2}" ;;
chext) chext $2 $3 ;;
push) gitpush "$2" ;;
minify) minify "$2" ;;
selfinstall) selfinstall ;;
*) update ;;
esac

